<?php
function my_autoloader($class)
  {
    include realpath(dirname(__FILE__))."\\".$class.'.php';
  }

  spl_autoload_register('my_autoloader');

/*require_once 'C:\Users\Zach\workspace\LegoLabCellGui\StationInformation.php';
require_once 'C:\Users\Zach\workspace\LegoLabCellGui\TableWriter.php';
require_once 'C:\Users\Zach\workspace\LegoLabCellGui\Grapher.php';
require_once 'C:\Users\Zach\workspace\LegoLabCellGui\OverallInformation.php';*/

/**
 * Test class for StationInformation.
 * Generated by PHPUnit on 2013-04-18 at 16:17:36.
 */
class StationInformationTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var StationInformation
     */
    protected $stationInformation;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
    	$newStationNumber = 1;
    	$newTableWriter = new TableWriter();
    	$newGrapher = new Grapher();
    	$newMeanIdleTime = 5.04;
    	$newMeanProcessTime = 45.48;
    	$newSigmaIdleTime = 27.89;
    	$newSigmaProcessTime = 130.32;
    	$newOverallStation = new OverallInformation();
        $this->object = new StationInformation($newStationNumber, $newTableWriter,$newGrapher,$newMeanIdleTime, $newMeanProcessTime, $newSigmaIdleTime, $newSigmaProcessTime, $newOverallStation);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers StationInformation::setPreviousStation
     */
    public function testSetPreviousStation()
    {
        $newPreviousStation = 3;
        $this->stationInformation->setPreviousStation($newPreviousStation);
        $this->assertEquals($newPreviousStation, $this->stationInformation->getPreviousStation());
    }

    /**
     * @covers StationInformation::getPreviousStation
     */
    public function testGetPreviousStation()
    {
        $newPreviousStation = 1;
        $this->stationInformation->setPreviousStation($newPreviousStation);
        $this->assertEquals($newPreviousStation, $this->stationInformation->getPreviousStation());
    }

    /**
     * @covers StationInformation::setNextStation
     */
    public function testSetNextStation()
    {
        $newNextStation = 4;
        $this->stationInformation->setNextStation($newNextStation);
        $this->assertEquals($newNextStation, $this->stationInformation->getNextStation());
    }

    /**
     * @covers StationInformation::getNextStation
     */
    public function testGetNextStation()
    {
        $newNextStation = 2;
        $this->stationInformation->setNextStation($newNextStation);
        $this->assertEquals($newNextStation, $this->stationInformation->getNextStation());
    }

    /**
     * @covers StationInformation::setPreviousSensor
     */
    public function testSetPreviousSensor()
    {
        $newPreviousSensor = 1;
        $this->stationInformation->setPreviousSensor($newPreviousSensor);
        $this->assertEquals($newPreviousSensor, $this->stationInformation->getPreviousSensor());
    }

    /**
     * @covers StationInformation::getPreviousSensor
     */
    public function testGetPreviousSensor()
    {
        $newPreviousSensor = 4;
        $this->stationInformation->setPreviousSensor($newPreviousSensor);
        $this->assertEquals($newPreviousSensor, $this->stationInformation->getPreviousSensor());
    }

    /**
     * @covers StationInformation::setNextSensor
     */
    public function testSetNextSensor()
    {
        $newNextSensor = 2;
        $this->stationInformation->setNextSensor($newNextSensor);
        $this->assertEquals($newNextSensor, $this->stationInformation->getNextSensor());
    }

    /**
     * @covers StationInformation::getNextSensor
     */
    public function testGetNextSensor()
    {
        $newNextSensor = 5;
        $this->stationInformation->setNextSensor($newNextSensor);
        $this->assertEquals($newNextSensor, $this->stationInformation->getNextSensor());
    }
}
?>
